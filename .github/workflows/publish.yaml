name: Publish Export

on:
  push:
  schedule:
    - cron: "0 0 * * *"

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  JWT_KEYS_JSON: ${{ secrets.JWT_KEYS_JSON }}
  GATSBY_ALGOLIA_APP_ID: ${{ secrets.GATSBY_ALGOLIA_APP_ID }}
  GATSBY_ALGOLIA_SEARCH_KEY: ${{ secrets.GATSBY_ALGOLIA_SEARCH_KEY }}
  ALGOLIA_ADMIN_KEY: ${{ secrets.ALGOLIA_ADMIN_KEY }}
  CNAME: resources.distributeaid.org

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Install Pandoc
        run: sudo apt-get install pandoc
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: "14.x"
      - name: Keep npm cache around to speed up installs
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-build-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci --no-audit
      - name: Export credentials
        run: echo ${JWT_KEYS_JSON} > jwt.keys.json
      - name: Get current time
        uses: 1466587594/get-current-time@v1
        id: current-time
        with:
          format: YYYYMMDD-HH
      - name: Cache export
        uses: actions/cache@v2
        id: cache-export
        with:
          path: ./export
          key:
            ${{ runner.OS }}-export-${{ steps.current-time.outputs.formattedTime
            }}
      - name: Export drive folder
        if: steps.cache-export.outputs.cache-hit != 'true'
        run: |
          mkdir export
          node export-to-markdown.js
      - name: Calculate Export Checksum
        run: |
          mkdir .algolia
          node .github/workflows/checksum.mjs ./export > ./.algolia/.export.checksum
      - name: Restore Algolia Indexed Checksum
        uses: actions/cache@v2
        with:
          path: ./.algolia
          key: ${{ runner.OS }}-algolia
      - name: Build
        run: npx gatsby build --prefix-paths
      - name: Publish export to gh-pages
        if: contains(github.ref, 'saga')
        run: |
          echo "machine github.com login authtoken password ${GITHUB_TOKEN}" > ~/.netrc
          git config --global user.email "actions@example.com"
          git config --global user.name "GitHub Actions"
          zip -r public/export.zip export
          cd public
          echo ${CNAME} > CNAME
          git init
          git add ./*
          git commit -m 'ðŸ“¦ publish latest export'
          git remote add origin https://github.com/${GITHUB_REPOSITORY}.git
          git push -f origin HEAD:gh-pages
